@model ShopLaptop.EF.TinTuc

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Administrator/Views/Shared/_LayoutAdministrator.cshtml";
}

<script src="~/Plugins/ckeditor/ckeditor.js"></script>

@section jsFooter{
    <script>

        var editor = CKEDITOR.replace('noidung', {
            customConfig: '/Plugin/ckeditor/config.js',
        });
    </script>
}

<div class="container container-fluid">
    <h2>Tạo</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Tin tức</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.tieude, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tieude, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tieude, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.hinhnen, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.hinhnen, new { htmlAttributes = new { @class = "form-control" }})
                    @Html.ValidationMessageFor(model => model.hinhnen, "", new { @class = "text-danger" })
                    <input type="file" name="fileUpload" id="fileUpload" accept="image/*"
                           style="display:none;" />
                    <input type="button" id="btnUpload" value="Chọn" class="btn btn-success" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.tomtat, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tomtat, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tomtat, "", new { @class = "text-danger" })
                </div>
            </div>
            @section upload
            {
                <script>
                    $(function () {
                        $('#btnUpload').click(function () {
                            $('#fileUpload').trigger('click');
                        });
                    });
                    $('#fileUpload').change(function () {
                        if (window.FormData !== undefined) {
                            var fileUpload = $('#fileUpload').get(0);
                            var files = fileUpload.files;
                            var formData = new FormData();
                            formData.append('file', files[0]);

                            $.ajax(
                                {
                                    type: 'POST',
                                    url: '/TinTucs/ProcessUpload',
                                    contentType: false,
                                    processData: false,
                                    data: formData,
                                    success: function (urlImage) {

                                        $('#pictureUpload').attr('src', urlImage);
                                        $('#hinh').val(urlImage);
                                    },
                                    error: function (err) {
                                        alert('Error ', err.statusText);
                                    }
                                });
                        }
                    });
                </script>
            }
            <div class="form-group">
                @Html.LabelFor(model => model.slug, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.slug, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.slug, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.noidung, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.noidung, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.ValidationMessageFor(model => model.noidung, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.luotxem, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.luotxem, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.luotxem, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ngaycapnhat, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ngaycapnhat, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ngaycapnhat, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.xuatban, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.xuatban)
                        @Html.ValidationMessageFor(model => model.xuatban, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.machude, "machude", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("machude", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.machude, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10" style="text-align: center">
                    <input type="submit" value="Tạo mới" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

    <div>
        @*@Html.ActionLink("Back to List", "Index")*@
        <a class="btn btn-outline-success text-bold" href="@Url.Action("Index","TinTucs")"><img style="width:40px;height:40px;" src="~/Content/images/forward.png" data-bs-toggle="tooltip" data-bs-placement="top" title="Trở về" /> Trở về</a>
    </div>
</div>